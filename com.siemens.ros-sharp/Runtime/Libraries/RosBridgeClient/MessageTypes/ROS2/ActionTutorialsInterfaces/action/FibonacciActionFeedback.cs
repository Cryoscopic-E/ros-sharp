/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

using RosSharp.RosBridgeClient.MessageTypes.Std;

#if !ROS2
using RosSharp.RosBridgeClient.MessageTypes.Actionlib;
using RosSharp.RosBridgeClient.MessageTypes.ActionlibTutorials;

namespace RosSharp.RosBridgeClient.MessageTypes.ActionTutorialsInterfaces
{
    public class FibonacciActionFeedback : ActionFeedback<FibonacciFeedback>
    {
        public const string RosMessageName = "action_tutorials_interfaces/FibonacciActionFeedback";

        public FibonacciActionFeedback() : base()
        {
            this.feedback = new FibonacciFeedback();
        }

        public FibonacciActionFeedback(Header header, GoalStatus status, FibonacciFeedback feedback) : base(header, status)
        {
            this.feedback = feedback;
        }
    }
}
#else
namespace RosSharp.RosBridgeClient.MessageTypes.ActionTutorialsInterfaces
{
    public class FibonacciActionFeedback : ActionFeedback<FibonacciFeedback>
    {
        public const string RosMessageName = "action_tutorials_interfaces/FibonacciActionFeedback";

        public FibonacciActionFeedback() : base()
        {
            this.values = new FibonacciFeedback();
        }

        public FibonacciActionFeedback(Header header, string id, string action, FibonacciFeedback feedback) : base(header, id, action)
        {
            this.values = feedback;
        }
    }
}
#endif